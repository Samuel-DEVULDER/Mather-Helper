program NQueen;uses  Backtracking;procedure main;  const      N = 8;  var      R, C: integer;       Q: array[1..N] of integer;      D: array[2..2*N] of boolean;      U: array[1-N..N-1] of boolean;   begin    for C:= 1 to N do Q[C]:= 0;    for C:= 2 to 2*N do D[C]:= false;    for C:= 1-N to N-1 do U[C]:= false;    for R:= 1 to N do    begin        C:= Choice(N);        if (Q[C] <> 0) or D[R+C] or U[R-C] then            Backtrack;        Q[C]:= R; D[R+C]:= true; U[R-C]:= true    end;    for C:= 1 to N do        write('(',Q[C]:1,',',C:1,') ');    writeln;end; begin    InitBacktracking;    main;end.